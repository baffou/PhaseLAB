
Constructor
-----------

.. dropdown:: **Constructor**

    .. raw:: html
      
        <p class="title">Synthax</p>

    .. code-block:: matlab
        :caption: Prototypes

        % possible forms
        Microscope(M)
        Microscope(OB)
        Microscope(OB,brand)
        Microscope(OB,f_TL)
        Microscope(OB,f_TL,CGcam)
        Microscope(OB,f_TL,Cam)
        Microscope(OB,f_TL,CGcam,software)

        % examples
        Microscope(100)
        Microscope(OB,'Nikon')
        Microscope(OB,180)
        Microscope(OB,200,'Silios_mono')
        Microscope(OB,165,'Zyla')
        Microscope(OB,200,'Silios_mono','PhaseLIVE')

    .. raw:: html
        
        <div class="title">Description</div>

    ``M`` is the objective magnification, ``OB`` is an |Objective| object, ``brand`` is the brand of the microscope, ``f_TL`` is the focal length of the tube lens (TL), ``CGcam`` is a *CGcamera* object, ``Cam`` is a *Camera* object and ``software`` is the software used to acquire data (must belong to :matlab:`{'Sid4Bio','PHAST','CG','PhaseLIVE','other'}`).

    Using an *Objective* object as the firt input, instead of just a magnification value, enables the specification of the numerical aperture and the objective brand as well. Also, the brand of the microscope is specified as a second input, which here differs from the brand of the objective lens. This happens, and it is important to specifiy because the actual focal length of the TL :math:`f_\mathrm{mic}` differs from one microscope company to another, and the magnifiation written on the objective assumes a specific focal length of the TL :math:`f_\mathrm{obj}`. Here is a table recalling the conventions

    .. list-table:: Tube length (TL) focal lengths :math:`f_\mathrm{TL}` for each microscope manufacturer
        :widths: 30 30
        :header-rows: 1
        :align: center

        * - Microscope brand
          - TL focal length
        * - Leica
          - 200 mm
        * - Nikon
          - 200 mm
        * - Olympus
          - 180 mm
        * - Zeiss
          - 165 mm


    Because of that, if the brand of the microscope is not the brand of the objective, the magnification :math:`M` of the microscope may differ from the one indicated on the objective lens :math:`M_\mathrm{obj}`, according to the relation

    .. math::

        M = M_\mathrm{obj}\frac{f_\mathrm{mic}}{f_\mathrm{mobj}}


    PhaseLAB knows these conventions and adapts ``MI.M`` accordingly. Here is an example

    .. code-block:: matlab

        OB = Objective(100, 1.3, 'Olympus');
        MI = Microscope(OB, 'Nikon')
    
        MI = 

        Microscope with properties:

            Objective: [1×1 Objective]
                CGcam: [1×1 CGcamera]
                f_TL: 200
            software: ''
                    M: -111.1111
            pxSize: 5.8500e-08
                zo: 0
                T0: []
            
    
    Here the magnification equals``-111.1111`` instead of ``-100`` because :math:`M = -100*200/180`.
